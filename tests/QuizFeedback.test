<?php

/**
 * @file
 * Unit tests for the quiz question Module.
 */

/**
 * Base test class for Quiz questions.
 */
class QuizFeedback extends QuizTestCase {

  function setUp($modules = array(), $admin_permissions = array(), $user_permissions = array()) {
    $modules[] = 'truefalse';
    parent::setUp($modules);
  }

  public static function getInfo() {
    return array(
      'name' => t('Quiz feedback'),
      'description' => t('Unit test for Quiz feedback.'),
      'group' => t('Quiz'),
    );
  }

  /**
   * Test question feedback. Note that we are only testing if the feedback
   * displays, each question type has its own tests for testing feedback
   * returned from that question type.
   *
   * @todo we may even remove the question-type tests that use the Feedback
   * times, since Quiz questions cannot set when feedback can be displayed.
   *
   * @todo this is also going to get refactored because of
   */
  public function testFeedback() {
    $this->drupalLogin($this->admin);
    $quiz_node = $this->drupalCreateQuiz();

    // 3 questions.
    $question_node1 = $this->drupalCreateNode(array('type' => 'truefalse', 'correct_answer' => 1, 'feedback' => 'Q1Feedback'));
    $this->linkQuestionToQuiz($question_node1, $quiz_node);
    $question_node2 = $this->drupalCreateNode(array('type' => 'truefalse', 'correct_answer' => 1, 'feedback' => 'Q2Feedback'));
    $this->linkQuestionToQuiz($question_node2, $quiz_node);
    $question_node3 = $this->drupalCreateNode(array('type' => 'truefalse', 'correct_answer' => 1, 'feedback' => 'Q3Feedback'));
    $this->linkQuestionToQuiz($question_node3, $quiz_node);

    $this->drupalLogin($this->user);

    // Feedback only after each question.
    // @todo when feedback is only after the question, the results of Q3
    // aren't visible.
    $quiz_node->review_options = array('question' => array('answer_feedback' => 'answer_feedback'));
    node_save($quiz_node);
    $this->drupalGet("node/{$quiz_node->nid}/take");
    $this->drupalPost(NULL, array(
      "question[$question_node1->nid]" => 1,
      ), t('Next'));
    $this->assertText('Q1Feedback');
    $this->drupalPost(NULL, array(
      ), t('Next question'));
    $this->drupalPost(NULL, array(
      "question[$question_node2->nid]" => 1,
      ), t('Next'));
    $this->assertText('Q2Feedback');
    $this->drupalPost(NULL, array(
      ), t('Next question'));
    $this->drupalPost(NULL, array(
      "question[$question_node3->nid]" => 1,
      ), t('Finish'));
    // Last question feedback, with another "Finish" button.
    $this->assertText('Q3Feedback');
    $this->drupalPost(NULL, array(
      ), t('Finish'));
    // Results page
    $this->assertNoText('Q1Feedback');
    $this->assertNoText('Q2Feedback');
    $this->assertNoText('Q3Feedback');

    // Feedback only after the quiz.
    $quiz_node->review_options = array('end' => array('answer_feedback' => 'answer_feedback'));
    node_save($quiz_node);
    $this->drupalGet("node/{$quiz_node->nid}/take");
    $this->drupalPost(NULL, array(
      "question[$question_node1->nid]" => 1,
      ), t('Next'));
    $this->drupalPost(NULL, array(
      "question[$question_node2->nid]" => 1,
      ), t('Next'));
    $this->drupalPost(NULL, array(
      "question[$question_node3->nid]" => 1,
      ), t('Finish'));
    $this->assertText('Q1Feedback');
    $this->assertText('Q2Feedback');
    $this->assertText('Q3Feedback');

    // No feedback at any time.
    $quiz_node->review_options = array();
    node_save($quiz_node);
    $this->drupalGet("node/{$quiz_node->nid}/take");
    $this->drupalPost(NULL, array(
      "question[$question_node1->nid]" => 1,
      ), t('Next'));
    $this->drupalPost(NULL, array(
      "question[$question_node2->nid]" => 1,
      ), t('Next'));
    $this->drupalPost(NULL, array(
      "question[$question_node3->nid]" => 1,
      ), t('Finish'));
    $this->assertNoText('Q1Feedback');
    $this->assertNoText('Q2Feedback');
    $this->assertNoText('Q3Feedback');
  }

}
